#ifndef RC64_H
#define RC64_H

#include "xparameters.h"
// #include "xiicps.h"  // <-- 注释掉 PS IIC 头文件
#include "xiic.h" // <-- 包含 AXI IIC 头文件
#include "xil_printf.h"
#include "sleep.h"

// EEPROM设备相关常量定义
// #define I2C_DEVICE_ID XPAR_XIICPS_0_DEVICE_ID // <-- 注释掉 PS IIC 设备 ID
#define I2C_DEVICE_ID XPAR_IIC_0_DEVICE_ID // <-- 使用 AXI IIC 设备 ID (来自你的 xparameters.h 定义)
#define EEPROM_SLAVE_ADDR 0x50             // EEPROM设备地址 (请确保与硬件连接匹配)
#define IIC_SCLK_RATE 100000               // IIC时钟速率 (100kHz)
#define EEPROM_PAGE_SIZE 32                // EEPROM页大小(字节) - 请查阅你的EEPROM数据手册!
#define EEPROM_WRITE_DELAY 10000           // EEPROM写入延时(微秒) - 查阅数据手册，通常为5ms到10ms

// --- 数组维度 (与原文件保持一致) ---
#define ROWS 8
#define COLS 3
#define DOUBLE_SIZE sizeof(double) // 通常是 8 字节

// --- 计算得到的尺寸 (与原文件保持一致) ---
// 单个数组中 double 元素的总数
#define ARRAY_ELEMENT_COUNT (ROWS * COLS)
// 单个数组占用的总字节数
#define ARRAY_BYTES (ARRAY_ELEMENT_COUNT * DOUBLE_SIZE) // 应该是 8 * 3 * 8 = 192 字节

// --- EEPROM 地址映射 (与原文件保持一致) ---
// 这些地址必须与数据布局匹配
#define EEPROM_ADDR_DA_CORRECT_100 (0)                                            // 从地址 0 开始
#define EEPROM_ADDR_DA_CORRECT_20 (EEPROM_ADDR_DA_CORRECT_100 + ARRAY_BYTES)      // 0 + 192 = 192 (0xC0)
#define EEPROM_ADDR_DA_CORRECTPHASE_100 (EEPROM_ADDR_DA_CORRECT_20 + ARRAY_BYTES) // 192 + 192 = 384 (0x180)
#define EEPROM_ADDR_AD_CORRECT (EEPROM_ADDR_DA_CORRECTPHASE_100 + ARRAY_BYTES)    // 384 + 192 = 576 (0x240)
#define EEPROM_TOTAL_CALIB_BYTES (EEPROM_ADDR_AD_CORRECT + ARRAY_BYTES)           // 576 + 192 = 768 (0x300)

// --- 兼容性定义 (如果 Rc64.c 使用了这些) ---
#define CALIB_ARRAY_SIZE ARRAY_ELEMENT_COUNT // 如果需要，保留 CALIB_ARRAY_SIZE (代表元素数量)
#define CALIB_DATA_SIZE ARRAY_BYTES          // 如果需要，保留 CALIB_DATA_SIZE (代表字节大小)

// --- 函数声明 ---
int RC64_Init(void);

// 读/写所有校准数据的函数
int RC64_ReadCalibData(void);
int RC64_WriteCalibData(void);

// 读/写单个数组的内部辅助函数 (现在使用 ARRAY_ELEMENT_COUNT)
int RC64_ReadArrayFromEEPROM(double *array, int elementCount, u16 eepromAddr);
int RC64_WriteArrayToEEPROM(double *array, int elementCount, u16 eepromAddr);

#endif /* RC64_H */