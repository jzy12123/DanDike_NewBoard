/*
 * File: MostLike_FindFrequence.c
 *
 * MATLAB Coder version            : 23.2
 * C/C++ source code generated on  : 31-May-2024 16:43:36
 */

/* Include Files */
#include "MostLike_FindFrequence.h"
#include "FFT2C_types.h"
#include "rt_nonfinite.h"
#include "rt_nonfinite.h"
#include <string.h>

/* Function Definitions */
/*
 * MOSTLIKE_FINDFREQUENCE 最大似然法找频率
 * 第一个参数输入波形数据，第二个输入截取长度，输出频率
 *
 * Arguments    : const emxArray_real_T *WaveData
 * Return Type  : double
 */
double MostLike_FindFrequence(const emxArray_real_T *WaveData)
{
  double likelihood[1138];
  double x_segment[780];
  const double *WaveData_data;
  double b_y;
  int d;
  int i;
  int k;
  WaveData_data = WaveData->data;
  /* %%——参数——%%% */
  /*  采样频率：1024*50Hz */
  /* 当估计的Hz为65Hz时,周期点数最少，约为787，这里根据实际频率范围设置最少点数的附近值
   */
  /* %%——最大似然法——%%% */
  /*  从信号中截取大约一个周期的数据 */
  for (i = 0; i < 780; i++) {
    x_segment[i] = WaveData_data[i];
  }
  /*  在原信号中截取，变成新的信号 */
  /*  移动步长 */
  /*  步长移动范围。从1开始是为了取消0点，预计最多要移动的为45Hz对应的1138个点
   */
  memset(&likelihood[0], 0, 1138U * sizeof(double));
  /*  构建一个一样大的空数组 */
  /*  初始化索引 */
  for (d = 0; d < 1138; d++) {
    double y[780];
    /*  加步长移动 */
    for (k = 0; k < 780; k++) {
      b_y = WaveData_data[(k + d) + 1] - x_segment[k];
      y[k] = b_y * b_y;
    }
    b_y = y[0];
    for (k = 0; k < 779; k++) {
      b_y += y[k + 1];
    }
    likelihood[d] = -b_y;
    /* 负的最小二乘作为简化的似然函数 */
  }
  if (!rtIsNaN(likelihood[0])) {
    d = 1;
  } else {
    boolean_T exitg1;
    d = 0;
    k = 2;
    exitg1 = false;
    while ((!exitg1) && (k < 1139)) {
      if (!rtIsNaN(likelihood[k - 1])) {
        d = k;
        exitg1 = true;
      } else {
        k++;
      }
    }
  }
  if (d == 0) {
    d = 1;
  } else {
    double ex;
    ex = likelihood[d - 1];
    i = d + 1;
    for (k = i; k < 1139; k++) {
      b_y = likelihood[k - 1];
      if (ex < b_y) {
        ex = b_y;
        d = k;
      }
    }
  }
  /* 找到最大似然估计的位置 */
  /* 得到一个周期的点数 */
  return 51200.0 / (((double)d - 1.0) + 1.0);
  /* 求对应的频率 */
  /* 返回 */
}

/*
 * File trailer for MostLike_FindFrequence.c
 *
 * [EOF]
 */
